// Code generated by MockGen. DO NOT EDIT.
// Source: awsapis/asg.go

// Package mock_awsapis is a generated GoMock package.
package mock_awsapis

import (
	context "context"
	reflect "reflect"

	autoscaling "github.com/aws/aws-sdk-go-v2/service/autoscaling"
	awsapis "github.com/mcastellin/aws-fail-az/awsapis"
	gomock "go.uber.org/mock/gomock"
)

// MockAutoScalingApi is a mock of AutoScalingApi interface.
type MockAutoScalingApi struct {
	ctrl     *gomock.Controller
	recorder *MockAutoScalingApiMockRecorder
}

// MockAutoScalingApiMockRecorder is the mock recorder for MockAutoScalingApi.
type MockAutoScalingApiMockRecorder struct {
	mock *MockAutoScalingApi
}

// NewMockAutoScalingApi creates a new mock instance.
func NewMockAutoScalingApi(ctrl *gomock.Controller) *MockAutoScalingApi {
	mock := &MockAutoScalingApi{ctrl: ctrl}
	mock.recorder = &MockAutoScalingApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAutoScalingApi) EXPECT() *MockAutoScalingApiMockRecorder {
	return m.recorder
}

// DescribeAutoScalingGroups mocks base method.
func (m *MockAutoScalingApi) DescribeAutoScalingGroups(ctx context.Context, params *autoscaling.DescribeAutoScalingGroupsInput, optFns ...func(*autoscaling.Options)) (*autoscaling.DescribeAutoScalingGroupsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeAutoScalingGroups", varargs...)
	ret0, _ := ret[0].(*autoscaling.DescribeAutoScalingGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAutoScalingGroups indicates an expected call of DescribeAutoScalingGroups.
func (mr *MockAutoScalingApiMockRecorder) DescribeAutoScalingGroups(ctx, params interface{}, optFns ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoScalingGroups", reflect.TypeOf((*MockAutoScalingApi)(nil).DescribeAutoScalingGroups), varargs...)
}

// NewDescribeAutoScalingGroupsPaginator mocks base method.
func (m *MockAutoScalingApi) NewDescribeAutoScalingGroupsPaginator(params *autoscaling.DescribeAutoScalingGroupsInput) awsapis.DescribeAutoScalingGroupsPager {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDescribeAutoScalingGroupsPaginator", params)
	ret0, _ := ret[0].(awsapis.DescribeAutoScalingGroupsPager)
	return ret0
}

// NewDescribeAutoScalingGroupsPaginator indicates an expected call of NewDescribeAutoScalingGroupsPaginator.
func (mr *MockAutoScalingApiMockRecorder) NewDescribeAutoScalingGroupsPaginator(params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDescribeAutoScalingGroupsPaginator", reflect.TypeOf((*MockAutoScalingApi)(nil).NewDescribeAutoScalingGroupsPaginator), params)
}

// UpdateAutoScalingGroup mocks base method.
func (m *MockAutoScalingApi) UpdateAutoScalingGroup(ctx context.Context, params *autoscaling.UpdateAutoScalingGroupInput, optFns ...func(*autoscaling.Options)) (*autoscaling.UpdateAutoScalingGroupOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateAutoScalingGroup", varargs...)
	ret0, _ := ret[0].(*autoscaling.UpdateAutoScalingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAutoScalingGroup indicates an expected call of UpdateAutoScalingGroup.
func (mr *MockAutoScalingApiMockRecorder) UpdateAutoScalingGroup(ctx, params interface{}, optFns ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAutoScalingGroup", reflect.TypeOf((*MockAutoScalingApi)(nil).UpdateAutoScalingGroup), varargs...)
}

// MockAutoScalingDescriber is a mock of AutoScalingDescriber interface.
type MockAutoScalingDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockAutoScalingDescriberMockRecorder
}

// MockAutoScalingDescriberMockRecorder is the mock recorder for MockAutoScalingDescriber.
type MockAutoScalingDescriberMockRecorder struct {
	mock *MockAutoScalingDescriber
}

// NewMockAutoScalingDescriber creates a new mock instance.
func NewMockAutoScalingDescriber(ctrl *gomock.Controller) *MockAutoScalingDescriber {
	mock := &MockAutoScalingDescriber{ctrl: ctrl}
	mock.recorder = &MockAutoScalingDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAutoScalingDescriber) EXPECT() *MockAutoScalingDescriberMockRecorder {
	return m.recorder
}

// DescribeAutoScalingGroups mocks base method.
func (m *MockAutoScalingDescriber) DescribeAutoScalingGroups(ctx context.Context, params *autoscaling.DescribeAutoScalingGroupsInput, optFns ...func(*autoscaling.Options)) (*autoscaling.DescribeAutoScalingGroupsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeAutoScalingGroups", varargs...)
	ret0, _ := ret[0].(*autoscaling.DescribeAutoScalingGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeAutoScalingGroups indicates an expected call of DescribeAutoScalingGroups.
func (mr *MockAutoScalingDescriberMockRecorder) DescribeAutoScalingGroups(ctx, params interface{}, optFns ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeAutoScalingGroups", reflect.TypeOf((*MockAutoScalingDescriber)(nil).DescribeAutoScalingGroups), varargs...)
}

// MockAutoScalingGroupUpdater is a mock of AutoScalingGroupUpdater interface.
type MockAutoScalingGroupUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockAutoScalingGroupUpdaterMockRecorder
}

// MockAutoScalingGroupUpdaterMockRecorder is the mock recorder for MockAutoScalingGroupUpdater.
type MockAutoScalingGroupUpdaterMockRecorder struct {
	mock *MockAutoScalingGroupUpdater
}

// NewMockAutoScalingGroupUpdater creates a new mock instance.
func NewMockAutoScalingGroupUpdater(ctrl *gomock.Controller) *MockAutoScalingGroupUpdater {
	mock := &MockAutoScalingGroupUpdater{ctrl: ctrl}
	mock.recorder = &MockAutoScalingGroupUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAutoScalingGroupUpdater) EXPECT() *MockAutoScalingGroupUpdaterMockRecorder {
	return m.recorder
}

// UpdateAutoScalingGroup mocks base method.
func (m *MockAutoScalingGroupUpdater) UpdateAutoScalingGroup(ctx context.Context, params *autoscaling.UpdateAutoScalingGroupInput, optFns ...func(*autoscaling.Options)) (*autoscaling.UpdateAutoScalingGroupOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateAutoScalingGroup", varargs...)
	ret0, _ := ret[0].(*autoscaling.UpdateAutoScalingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAutoScalingGroup indicates an expected call of UpdateAutoScalingGroup.
func (mr *MockAutoScalingGroupUpdaterMockRecorder) UpdateAutoScalingGroup(ctx, params interface{}, optFns ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAutoScalingGroup", reflect.TypeOf((*MockAutoScalingGroupUpdater)(nil).UpdateAutoScalingGroup), varargs...)
}

// MockDescribeAutoScalingGroupsPaginator is a mock of DescribeAutoScalingGroupsPaginator interface.
type MockDescribeAutoScalingGroupsPaginator struct {
	ctrl     *gomock.Controller
	recorder *MockDescribeAutoScalingGroupsPaginatorMockRecorder
}

// MockDescribeAutoScalingGroupsPaginatorMockRecorder is the mock recorder for MockDescribeAutoScalingGroupsPaginator.
type MockDescribeAutoScalingGroupsPaginatorMockRecorder struct {
	mock *MockDescribeAutoScalingGroupsPaginator
}

// NewMockDescribeAutoScalingGroupsPaginator creates a new mock instance.
func NewMockDescribeAutoScalingGroupsPaginator(ctrl *gomock.Controller) *MockDescribeAutoScalingGroupsPaginator {
	mock := &MockDescribeAutoScalingGroupsPaginator{ctrl: ctrl}
	mock.recorder = &MockDescribeAutoScalingGroupsPaginatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDescribeAutoScalingGroupsPaginator) EXPECT() *MockDescribeAutoScalingGroupsPaginatorMockRecorder {
	return m.recorder
}

// NewDescribeAutoScalingGroupsPaginator mocks base method.
func (m *MockDescribeAutoScalingGroupsPaginator) NewDescribeAutoScalingGroupsPaginator(params *autoscaling.DescribeAutoScalingGroupsInput) awsapis.DescribeAutoScalingGroupsPager {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDescribeAutoScalingGroupsPaginator", params)
	ret0, _ := ret[0].(awsapis.DescribeAutoScalingGroupsPager)
	return ret0
}

// NewDescribeAutoScalingGroupsPaginator indicates an expected call of NewDescribeAutoScalingGroupsPaginator.
func (mr *MockDescribeAutoScalingGroupsPaginatorMockRecorder) NewDescribeAutoScalingGroupsPaginator(params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDescribeAutoScalingGroupsPaginator", reflect.TypeOf((*MockDescribeAutoScalingGroupsPaginator)(nil).NewDescribeAutoScalingGroupsPaginator), params)
}

// MockDescribeAutoScalingGroupsPager is a mock of DescribeAutoScalingGroupsPager interface.
type MockDescribeAutoScalingGroupsPager struct {
	ctrl     *gomock.Controller
	recorder *MockDescribeAutoScalingGroupsPagerMockRecorder
}

// MockDescribeAutoScalingGroupsPagerMockRecorder is the mock recorder for MockDescribeAutoScalingGroupsPager.
type MockDescribeAutoScalingGroupsPagerMockRecorder struct {
	mock *MockDescribeAutoScalingGroupsPager
}

// NewMockDescribeAutoScalingGroupsPager creates a new mock instance.
func NewMockDescribeAutoScalingGroupsPager(ctrl *gomock.Controller) *MockDescribeAutoScalingGroupsPager {
	mock := &MockDescribeAutoScalingGroupsPager{ctrl: ctrl}
	mock.recorder = &MockDescribeAutoScalingGroupsPagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDescribeAutoScalingGroupsPager) EXPECT() *MockDescribeAutoScalingGroupsPagerMockRecorder {
	return m.recorder
}

// HasMorePages mocks base method.
func (m *MockDescribeAutoScalingGroupsPager) HasMorePages() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasMorePages")
	ret0, _ := ret[0].(bool)
	return ret0
}

// HasMorePages indicates an expected call of HasMorePages.
func (mr *MockDescribeAutoScalingGroupsPagerMockRecorder) HasMorePages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasMorePages", reflect.TypeOf((*MockDescribeAutoScalingGroupsPager)(nil).HasMorePages))
}

// NextPage mocks base method.
func (m *MockDescribeAutoScalingGroupsPager) NextPage(arg0 context.Context, arg1 ...func(*autoscaling.Options)) (*autoscaling.DescribeAutoScalingGroupsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "NextPage", varargs...)
	ret0, _ := ret[0].(*autoscaling.DescribeAutoScalingGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NextPage indicates an expected call of NextPage.
func (mr *MockDescribeAutoScalingGroupsPagerMockRecorder) NextPage(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NextPage", reflect.TypeOf((*MockDescribeAutoScalingGroupsPager)(nil).NextPage), varargs...)
}
